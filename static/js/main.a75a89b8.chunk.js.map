{"version":3,"sources":["utils/api/CryptoShuttleAPI.js","utils/api/services/CryptoShuttleService.js","components/topcoins/Topcoins.js","components/GlobalMarketInfo/GlobalMarketInfo.js","views/HomeView.js","shared/global/provider/UserProvider.js","components/Userpage/SavedForecasts.js","components/Userpage/Userpage.js","views/UserView.js","components/CoinHistoryGraph/CoinHistoryGraph.js","components/CoinInfoBox/CoinInfo.js","components/CoinInfoBox/CoinInfoBox.js","components/SaveLastViewed/SaveLastViewed.js","shared/global/provider/PopupsProvider.js","components/SignUpLink/SignUpLink.js","components/LoginButton/UseForm.js","components/LoginButton/LoginFormValidationRules.js","components/LoginButton/LoginButton.js","components/Forecast/ForecastInfo.js","shared/images/hadija-saidi-9cgMKmZyhH0-unsplash.jpg","components/Forecast/ForecastGraph.js","shared/images/graph-line.jpg","components/Forecast/ForecastMultiple.js","components/RocketLoader/RocketLoader.js","components/Forecast/Forecast.js","shared/images/rocket-space-x.jpg","components/LesserForecast/LesserForecastGraph.js","components/LesserForecast/LesserForecast.js","components/Forecast/RunForecastButton.js","views/CoinView/CoinView.js","routes/Routing.js","components/Search/Search.js","shared/images/logotype.svg","shared/global/provider/RegUserProvider.js","components/register/UseForm.js","components/register/RegisterFormValidationRules.js","components/register/Register.js","components/Profile/Profile.js","components/Darkmode/Darkmode.js","components/NavigationBar/NavigationBar.js","components/TrendingInfo/TrendingInfo.js","components/LastViewed/LastViewed.js","components/Sidebar/Sidebar.js","App.js","reportWebVitals.js","index.js"],"names":["CryptoShuttleAPI","axios","create","baseURL","headers","http","get","userLogin","post","userObject","slug","token","coins","forecastInfo","id","params","delete","data","Topcoins","useState","error","setError","isLoaded","setIsLoaded","topcoins","setTopcoins","history","useHistory","fetchData","a","CryptoShuttleService","useEffect","message","className","Object","keys","map","key","index","onClick","row","push","src","image","alt","height","market_cap_rank","name","current_price","toLocaleString","price_change_percentage_24h","market_cap","GlobalMarketInfo","globalMarketInfo","setGlobalMarketInfo","capPercentage","setCapPercentage","cap_percentage","active_cryptocurrencies","total_market_cap","market_change_percentage","icon","faLevelDownAlt","faLevelUpAlt","total_markets","total_volume","market_cap_percentage","HomeView","UserContext","createContext","UserProvider","props","authenticatedUser","setAuthenticatedUser","Provider","value","children","SavedForecast","setData","sortedData","setSortedData","values","val","date_made","Date","toISOString","substr","valueOf","getSavedForecasts","userId","sortCoins","console","log","sort","b","coin","to","charAt","toUpperCase","slice","buy_date","buy_price","sell_date","sell_price","max_gain_procent","forecastId","currentForecasts","forecastsAfterDelete","filter","f","_id","e","handleClick","Userpage","user","UserView","setUser","userAuthBackend","localStorage","getItem","getUserWithToken","logged_in_as","CoinHistoryGraph","coinHistoryGraph","setCoinHistoryGraph","useParams","timestamp","CustomTooltip","active","payload","label","formattedDate","moment","format","ResponsiveContainer","width","AreaChart","x1","y1","x2","y2","offset","stopColor","stopOpacity","Area","dataKey","stroke","fill","XAxis","tick","x","y","dateTip","transform","dy","fontSize","fontFamily","textAnchor","YAxis","axisLine","tickLine","tickCount","tickFormatter","number","Tooltip","content","animationDuration","CartesianGrid","opacity","vertical","Brush","CoinInfo","allinfo","coinInfo","convertToDate","datestring","toLocaleDateString","market_cap_change_percentage_24h","high_24h","low_24h","circulating_supply","ath","ath_date","atl","atl_date","dateString","last_updated","CoinInfoBox","setIsLoading","setCoinInfo","fetchCoinInfo","response","SaveLastViewed","lastViewedCoins","JSON","parse","length","shift","indexOf","setItem","stringify","saveLastViewed","PopupsContext","PopupsProvider","open","setOpen","SignUpLink","useContext","useForm","callback","validate","setValues","errors","setErrors","isSubmitting","setIsSubmitting","handleChange","event","persist","target","handleSubmit","preventDefault","email","test","password","LoginButton","passwordShown","setPasswordShown","eye","faEye","eyeSlash","faEyeSlash","togglePasswordVisiblity","userFromServer","access_token","btn","document","getElementById","removeAttribute","style","visibility","trigger","modal","close","onSubmit","noValidate","htmlFor","autoComplete","type","onChange","required","placeholder","ForecastInfo","showSaveInfo","setShowSaveInfo","info","now","ForecastGraph","percentage","forecastGraph","fillOpacity","Logotype","ForecastMultiple","LineChart","forecastMultiple","Line","dot","strokeWidth","Legend","verticalAlign","RocketLoader","faRocket","Forecast","setForecastInfo","setForecastGraph","setForecastMultiple","graph","multiple","LesserForecastGraph","lesserForecastGraph","LesserForecast","setLesserForecastGraph","RunForecastButton","btnRef","useRef","React","showResults","setShowResults","ref","current","setAttribute","CoinView","signInRef","Routing","exact","path","component","Search","search","setSearch","filteredData","setFilteredData","names","searchWord","newFilter","toLowerCase","startsWith","href","RegUserContext","RegUserProvider","registerError","setRegisterError","confirmPassword","Register","closeModal","logInUser","o","closeOnDocumentClick","onClose","Profile","logout","removeItem","Darkmode","darkmode","setFetchMethod","window","fetch","enableDarkMode","brightness","contrast","sepia","disableDarkMode","checked","isDarkReaderEnabled","faSun","faMoon","NavigationBar","TrendingInfo","trendingInfo","setTrendingInfo","faPepperHot","size","color","usd","usd_24h_change","LastViewed","lastViewed","setLastViewed","listen","location","pathname","c","order","A","B","faClock","Sidebar","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.a75a89b8.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\n/* const development = \"http://127.0.0.1:5000\" */\r\nconst production = \"https://obscure-cliffs-37126.herokuapp.com/\"\r\n\r\nconst CryptoShuttleAPI = axios.create({\r\n    baseURL: production,\r\n    headers: {'Content-Type': 'application/json'}\r\n})\r\n\r\nexport default CryptoShuttleAPI","import http from '../CryptoShuttleAPI'\r\n\r\nconst topChart = () => {\r\n    return http.get(\"/rest/topchart?currency=usd\")\r\n}\r\n\r\nconst marketGraph = (slug) => {\r\n    return http.get(`/rest/market/graph?coin=${slug}`)\r\n}\r\n\r\nconst loginUser = (userLogin) => {\r\n    \r\n    return http.post(\"/user/login\", userLogin,  {\r\n        \r\n    } );\r\n}\r\n\r\n\r\nconst logoutUser = () => {\r\n\r\n    return http.get(\"/user/logout\")\r\n}\r\n\r\n\r\nconst trendingInfo = () => {\r\n    return http.get(\"/rest/trending/info\")\r\n}\r\n\r\n\r\nconst registerUser = (userObject) => {\r\n    return http.post(\"/user/register\", userObject)\r\n}\r\n\r\nconst coinInfo = (slug) => {\r\n    return http.get(`/rest/market/info?coin=${slug}`)\r\n}\r\n\r\nconst forecastInfo = (slug, token) => {\r\n    return http.get(`/rest/forecast/coins?coin=${slug}`, {\r\n        headers: {'Authorization': 'Bearer ' + token}\r\n    })\r\n}\r\n\r\nconst lastViewed = (coins) => {\r\n    return http.get(`/rest/market/info?coin=${coins[0]}, ${coins[1]}, ${coins[2]}, ${coins[3]}, ${coins[4]}`)\r\n}\r\n\r\nconst saveForecast = (forecastInfo) => {\r\n    return http.post(\"/user/forecasts\", forecastInfo)\r\n}\r\n\r\n\r\nconst search = () => {\r\n    return http.get(\"/rest/coins/search\")\r\n}\r\n\r\nconst globalMarketInfo = (slug) => {\r\n    return http.get(`/rest/market/global-market-data`)\r\n}\r\n\r\nconst getLoggedInUser = (token) => {\r\n    return http.get('/rest/get-user', {\r\n        headers: {'Authorization': 'Bearer ' + token}\r\n    })\r\n}\r\n\r\nconst getSavedForecasts = (id) => {\r\n    return http.get('/user/forecasts', {params: {'id': id}})\r\n}\r\n\r\nconst deleteSavedForecast = (id) => {\r\n    return http.delete('/rest/delete-forecast', {data:{ \"id\": id }})\r\n}\r\n\r\nconst lesserForecastInfo = (slug) => {\r\n    return http.get(`rest/forecast/lesser/coins?coin=${slug}`)\r\n}\r\n\r\nexport default { topChart, loginUser, logoutUser, registerUser, marketGraph, trendingInfo, coinInfo, forecastInfo, lastViewed, globalMarketInfo, search, saveForecast, getLoggedInUser, getSavedForecasts, deleteSavedForecast, lesserForecastInfo}\r\n\r\n","import React, { useEffect, useState } from 'react'\r\nimport CryptoShuttleService from '../../utils/api/services/CryptoShuttleService';\r\nimport './Topcoins.css'\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction Topcoins() {\r\n    const [error, setError] = useState(null);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [topcoins, setTopcoins] = useState([]);\r\n    const history = useHistory()\r\n    \r\n    const fetchData = async () => {\r\n        try {\r\n            const {data} = await CryptoShuttleService.topChart()\r\n            setIsLoaded(true);\r\n            setTopcoins(data);\r\n        } catch(error) {\r\n            setIsLoaded(true);\r\n            setError(error);\r\n        }\r\n    }\r\n\r\n    const handleClick = (row) => {\r\n        history.push(`/coins/${row}`)\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchData()\r\n    }, [])\r\n\r\n    if (error) {\r\n        return <div>Error: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n        return <div></div>;\r\n    } else {\r\n        return (\r\n            <div className=\"topcoins\">\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th></th>\r\n                            <th>#</th>\r\n                            <th>Name</th>\r\n                            <th>Price</th>\r\n                            <th>24h %</th>\r\n                            <th>Market Cap</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {Object.keys(topcoins).map((key, index) => (\r\n                            <tr onClick={() =>handleClick(topcoins[key].id)} key={index}>\r\n                                <td><img src={topcoins[key].image} alt=\"logo\" height=\"30\" /></td>\r\n                                <td>{topcoins[key].market_cap_rank}</td>\r\n                                <td>{topcoins[key].name}</td>\r\n                                <td>${topcoins[key].current_price.toLocaleString()}</td>\r\n                                <td className={(topcoins[key].price_change_percentage_24h < 0) ? 'negative' : 'positive'}>\r\n                                    {topcoins[key].price_change_percentage_24h.toLocaleString()}%\r\n                                </td>\r\n                                <td>${topcoins[key].market_cap.toLocaleString()}</td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Topcoins","import React, { useEffect, useState } from 'react'\r\nimport CryptoShuttleService from '../../utils/api/services/CryptoShuttleService';\r\nimport './GlobalMarketInfo.css'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faLevelUpAlt, faLevelDownAlt } from '@fortawesome/free-solid-svg-icons'\r\n\r\n\r\n\r\n    const GlobalMarketInfo = () => {\r\n    const [error, setError] = useState(null);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [globalMarketInfo, setGlobalMarketInfo] = useState([]);\r\n    const [capPercentage, setCapPercentage] = useState([]);\r\n    const convertToDateTime = (dateString) => {\r\n        dateString = new Date(dateString).toLocaleString()\r\n        return dateString\r\n    }\r\n\r\n    const fetchData = async () => {\r\n        try {\r\n            const { data } = await CryptoShuttleService.globalMarketInfo()\r\n            setIsLoaded(true);\r\n            setGlobalMarketInfo(data);\r\n            setCapPercentage(data.cap_percentage);\r\n        } catch (error) {\r\n            setIsLoaded(true);\r\n            setError(error);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchData()\r\n        \r\n    }, [])\r\n    \r\n    \r\n    if (error) {\r\n        return <div>Error: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n        return <div></div>;\r\n    } else {\r\n        return (\r\n                        \r\n            <div className=\"global-market-info\">                                        \r\n                <div className=\"market-info\">   \r\n                    <div>Active Cryptos: {globalMarketInfo.active_cryptocurrencies ? globalMarketInfo.active_cryptocurrencies.toLocaleString() : 'N/A'}</div>\r\n                    <div>Market Cap: ${globalMarketInfo.total_market_cap ? globalMarketInfo.total_market_cap.toLocaleString() : 'N/A'}</div>\r\n                    <div className=\"cap-percentage\"> Market Change: \r\n                        <div className={(globalMarketInfo.market_change_percentage < 0) ? 'negative' : 'positive'}>{globalMarketInfo.market_change_percentage}% <FontAwesomeIcon icon={(globalMarketInfo.market_change_percentage < 0) ? faLevelDownAlt : faLevelUpAlt}/></div>                                                                                                                 \r\n                    </div>    \r\n                    <div>Exchanges: {globalMarketInfo.total_markets}</div>\r\n                    <div>24h-Volume: ${globalMarketInfo.total_volume ? globalMarketInfo.total_volume.toLocaleString() : 'N/A'}</div>\r\n                    <div className=\"dominance\"> \r\n                        {Object.keys(capPercentage).map((key, index) => {                                   \r\n                            return <div key={index} className=\"dominance-market-cap\">\r\n                                <img src={capPercentage[key].image} alt=\"logo\" height=\"20\"/>\r\n                                <span>{capPercentage[key].market_cap_percentage}%</span>\r\n                            </div>                                   \r\n                        })                                                                   \r\n                        }\r\n                    </div>\r\n                    {/* <div>Updated: {convertToDateTime(globalMarketInfo.updated_at)}</div> */}\r\n                </div>                \r\n                    \r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default GlobalMarketInfo","import React from 'react'\r\nimport Topcoins from '../components/topcoins/Topcoins'\r\nimport GlobalMarketInfo  from '../components/GlobalMarketInfo/GlobalMarketInfo'\r\n\r\nexport const HomeView = () => {\r\n    return(\r\n        <div className=\"main\">\r\n            <GlobalMarketInfo />\r\n            <Topcoins />\r\n        </div>\r\n    )\r\n}","import React, {useState, createContext} from 'react'\r\n\r\nexport const UserContext = createContext()\r\n\r\nexport const UserProvider = (props)  => {\r\n    const [authenticatedUser, setAuthenticatedUser]   = useState()\r\n\r\n    return(\r\n        <UserContext.Provider value = {[authenticatedUser, setAuthenticatedUser]}>\r\n            {props.children}\r\n        </UserContext.Provider>\r\n    )\r\n}","import React, {useState, useEffect} from 'react'\r\nimport CryptoShuttleService from '../../utils/api/services/CryptoShuttleService'\r\nimport \"./SavedForecasts.css\"\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\nexport const SavedForecast = (props) => {\r\n    const [data, setData] = useState([])\r\n    const [sortedData, setSortedData] = useState([])\r\n    \r\n    Object.values(sortedData).map((val) => {\r\n        val.date_made = (new Date(val.date_made)).toISOString().substr(0, 10).valueOf();\r\n        return val\r\n    })\r\n\r\n    const getSavedForecasts = async () => {\r\n        try{\r\n            const { data } = await CryptoShuttleService.getSavedForecasts(props.userId)\r\n            setData(data)\r\n            sortCoins(data)\r\n\r\n        }\r\n        catch(e) {\r\n            console.log(e.message);\r\n        }\r\n    }\r\n\r\n    const sortCoins = (data) => {\r\n        // sort by coin name asc\r\n        data.sort((a, b) =>  {\r\n            if (a.coin > b.coin){\r\n                return 1\r\n            }\r\n            if (a.coin < b.coin){\r\n                return -1\r\n            }\r\n            return 0\r\n        })\r\n     \r\n        setSortedData(data) \r\n    }\r\n\r\n    const handleClick = (forecastId) =>{\r\n        const currentForecasts = sortedData\r\n        const forecastsAfterDelete = currentForecasts.filter(f=> f._id !== forecastId)\r\n        \r\n        try {\r\n            CryptoShuttleService.deleteSavedForecast(forecastId)\r\n            console.log(\"deleted forecast\");\r\n            setSortedData(forecastsAfterDelete)\r\n        }\r\n        catch (e) {\r\n            console.log(e.message);\r\n            setSortedData(currentForecasts)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        getSavedForecasts()\r\n    },[])\r\n\r\n    return (\r\n        <div className=\"savedForecast\">\r\n            <h3>Your saved forecasts</h3>\r\n   \r\n            {Object.keys(sortedData).map((key, index) => (\r\n                <div key={index} className=\"savedForecastInfo\">\r\n                    <Link to={`/coins/${sortedData[key].coin}`} className=\"coinName\"><h4>{sortedData[key].coin.charAt(0).toUpperCase() + sortedData[key].coin.slice(1)}</h4></Link>\r\n                    <div className=\"dateMade\">Saved at: {sortedData[key].date_made}</div>\r\n                    <div className=\"buyDate\">Buy date: {sortedData[key].buy_date}</div>\r\n                    <div className=\"buyPrice\">Buy price: ${sortedData[key].buy_price}</div>\r\n                    <div className=\"sellDate\">Sell date: {sortedData[key].sell_date}</div>\r\n                    <div className=\"sellPrice\">Sell price: ${sortedData[key].sell_price}</div>\r\n                    <div className=\"maxGainPercent\">Max gain: {sortedData[key].max_gain_procent}%</div>\r\n                    <button className=\"deleteForecast\" onClick={() =>handleClick(sortedData[key]._id)}>Delete</button>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    )\r\n}","import React, {useContext, useState} from 'react'\r\nimport \"./Userpage.css\"\r\nimport CryptoShuttleService from '../../utils/api/services/CryptoShuttleService'\r\nimport { UserContext } from '../../shared/global/provider/UserProvider'\r\nimport { SavedForecast } from './SavedForecasts'\r\n\r\nexport const Userpage = (props) => {\r\n \r\n    return (\r\n        <div className=\"userPage\">\r\n            <h1>Welcome, {props.user.name}</h1>\r\n            <SavedForecast userId={props.user.id} />\r\n            \r\n        </div>\r\n    )\r\n}","import React,{useState, useEffect} from \"react\";\r\nimport { Userpage } from \"../components/Userpage/Userpage\";\r\nimport CryptoShuttleService from \"../utils/api/services/CryptoShuttleService\";\r\n\r\nexport const UserView = () => {\r\n\r\n    let  [user, setUser] = useState()\r\n    \r\n    const userAuthBackend = async () => {\r\n        try{\r\n            const getUserWithToken = await CryptoShuttleService.getLoggedInUser(localStorage.getItem('token'))\r\n            setUser(getUserWithToken.data.logged_in_as)\r\n        }\r\n        catch(e){\r\n            console.log(e.message);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        userAuthBackend()\r\n    },[])\r\n    return(\r\n        <>\r\n             {user ? <Userpage user={user}/> : \"You need to log in first\" }\r\n        </>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport CryptoShuttleService from '../../utils/api/services/CryptoShuttleService';\r\nimport './CoinHistoryGraph.css'\r\nimport { useParams } from 'react-router-dom'\r\nimport moment from 'moment'\r\nimport {\r\n    ResponsiveContainer,\r\n    AreaChart,\r\n    XAxis,\r\n    YAxis,\r\n    Area,\r\n    Tooltip,\r\n    CartesianGrid,\r\n    Brush,\r\n} from \"recharts\";\r\n\r\nconst CoinHistoryGraph = () => {\r\n    const [error, setError] = useState(null);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [coinHistoryGraph, setCoinHistoryGraph] = useState([]);\r\n    let { slug } = useParams();\r\n\r\n    const fetchData = async (slug) => {\r\n        try {\r\n            const { data } = await CryptoShuttleService.marketGraph(slug)\r\n            setIsLoaded(true);\r\n            setCoinHistoryGraph(data);\r\n        } catch (error) {\r\n            setIsLoaded(true);\r\n            setError(error);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchData(slug)\r\n    }, [slug])\r\n\r\n    // Converts the timestamp to a readable string\r\n    Object.values(coinHistoryGraph).map((val) => {\r\n        return val.timestamp = (new Date(val.timestamp)).toISOString().substr(0, 10).valueOf();\r\n    })\r\n\r\n    // Customises the graphs ticks on the X-axis\r\n    const CustomizedAxisTick = ({ x, y, payload }) => {\r\n        const dateTip = moment(payload.value)\r\n            .format(\"YYYY-MM-DD\")\r\n        return (\r\n            <g transform={`translate(${x},${y})`}>\r\n                <text x={23} y={0} dy={14} fontSize=\"0.90em\" fontFamily=\"bold\" textAnchor=\"end\" fill=\"#363636\">\r\n                    {dateTip}</text>\r\n            </g>\r\n        );\r\n    }\r\n\r\n    // Customises the graphs tooltips box\r\n    const CustomTooltip = ({ active, payload, label }) => {\r\n        const dateTip = moment(label)\r\n            .format(\"ll\")\r\n            .slice(0, 12);\r\n        const formattedDate = dateTip\r\n        if (payload === null) return\r\n        if (active)\r\n            return (\r\n                <div className=\"custom-tooltip\">\r\n                    <p className=\"label-tooltip\">{`${formattedDate}`}</p>\r\n                    <p className=\"desc-tooltip\">\r\n                        <span className=\"value-tooltip\">Price: {payload[0].value.toLocaleString()}</span>\r\n                    </p>\r\n                </div>\r\n            );\r\n        return null;\r\n    };\r\n\r\n    if (error) {\r\n        return <div>Error: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n        return <div></div>;\r\n    } else {\r\n        return (\r\n            <div className=\"coin-history-graph\">\r\n                <ResponsiveContainer width=\"100%\" height={400}>\r\n                    <AreaChart data={Object.values(coinHistoryGraph)}>\r\n                        <defs>\r\n                            <linearGradient id=\"color\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                                <stop offset=\"0%\" stopColor=\"#2451B7\" stopOpacity={0.8} />\r\n                                <stop offset=\"75%\" stopColor=\"#2451B7\" stopOpacity={0.2} />\r\n                            </linearGradient>\r\n                        </defs>\r\n                        <Area dataKey=\"price\" stroke=\"#2451B7\" fill=\"url(#color)\" />\r\n                        <XAxis\r\n                            dataKey=\"timestamp\"\r\n                            tick={CustomizedAxisTick}\r\n                        />\r\n                        <YAxis \r\n                            dataKey=\"price\"\r\n                            axisLine={false}\r\n                            tickLine={false}\r\n                            tickCount={8}\r\n                            tickFormatter={(number) => `$${number}`}\r\n\r\n                        />\r\n                        <Tooltip content={<CustomTooltip />} animationDuration={0} />\r\n                        <CartesianGrid  opacity={0.4} vertical={false}/>\r\n                        <Brush dataKey=\"timestamp\" />\r\n                    </AreaChart>\r\n                </ResponsiveContainer>\r\n            </div>          \r\n        );\r\n    }\r\n}\r\n\r\nexport default CoinHistoryGraph\r\n","import React from \"react\";\r\nimport './CoinInfo.css'\r\n\r\nexport const CoinInfo = (props) => {\r\n \r\n    const allinfo= props.coinInfo\r\n\r\n\r\n    const convertToDateTime = (dateString) => {\r\n        dateString = new Date(dateString).toLocaleString()\r\n        return dateString\r\n    }\r\n    const convertToDate = (datestring)=> {\r\n        datestring = new Date(datestring).toLocaleDateString()\r\n        return datestring\r\n    }\r\n       \r\n    return (\r\n        \r\n        <div className=\"coinInfo\">\r\n            {\r\n              Object.keys(allinfo).map((coin, index) => {\r\n                  return (\r\n                      <div key={index}>\r\n            \r\n                        <div className=\"singleCoinTitle\">\r\n                            <img src={allinfo[coin].image} alt=\"logo\"></img>\r\n                            <h1>{allinfo[coin].name}</h1>\r\n                            <h1>${allinfo[coin].current_price.toLocaleString()}</h1>\r\n                            <div>{allinfo[coin].market_cap_change_percentage_24h}%</div>\r\n                            <div>Rank #{allinfo[coin].market_cap_rank}</div>\r\n\r\n                        </div>\r\n                        \r\n                        <table>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>High 24h</th>\r\n                                    <th>Low 24h</th>\r\n                                    <th>Market cap</th>\r\n                                    <th>Circulating supply</th>\r\n                                    {/* <th>Max supply</th> */}\r\n                                    <th>All time high</th>\r\n                                    <th>All time low</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>{allinfo[coin].high_24h ? \"$\" + allinfo[coin].high_24h.toLocaleString() : 'N/A'}</td>\r\n                                    <td>{allinfo[coin].low_24h ? \"$\" + allinfo[coin].low_24h.toLocaleString() : 'N/A'}</td>\r\n                                    <td>${allinfo[coin].market_cap.toLocaleString()}</td>\r\n                                    <td>{allinfo[coin].circulating_supply.toLocaleString()}</td>\r\n                                    {/* <td>{allinfo[coin].max_supply.toLocaleString()}</td> */}\r\n                                    <td>${allinfo[coin].ath.toLocaleString()}<br/>({convertToDate(allinfo[coin].ath_date)})</td>\r\n                                    <td>${allinfo[coin].atl.toLocaleString()}<br/>({convertToDate(allinfo[coin].atl_date)})</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                        <div className=\"lastUpdated\">Last updated: {convertToDateTime(allinfo[coin].last_updated)}</div>\r\n                          {/* <div className=\"currentPrice\">Current Price: ${allinfo[coin].current_price}</div>\r\n                          <div className=\"allTimeHigh\">All time high: ${allinfo[coin].ath}</div>\r\n                          <div className=\"allTimeHighDate\">All time high date: {convertToDate(allinfo[coin].ath_date)}</div>\r\n                          <div className=\"allTimeHighChangePercentage\">All time high change percentage: {allinfo[coin].ath_change_percentage}%</div>\r\n                          <div className=\"allTimeLow\">All time low: ${allinfo[coin].atl}</div>\r\n                          <div className=\"allTimeLowDate\">All time low date: {convertToDate(allinfo[coin].atl_date)}</div>\r\n                          <div className=\"allTimeLowChangePercentage\">All time low change percentage: {allinfo[coin].atl_change_percentage}%</div> \r\n                          <div className=\"circulatingSupply\">Circulating supply: {allinfo[coin].circulating_supply}</div>\r\n                          <div className=\"fullyDilutedValuation\">Fully diluted valuation: ${allinfo[coin].fully_diluted_valuation}</div>\r\n                          <div className=\"high24h\">High 24h: ${allinfo[coin].high_24h}</div>\r\n                          <div className=\"low24h\">Low 24h: ${allinfo[coin].low_24h}</div>\r\n                          <div className=\"marketCap\">Market cap: ${allinfo[coin].market_cap}</div>\r\n                          <div className=\"marketCapChange24h\">Market cap change 24h: {allinfo[coin].market_cap_change_24h}</div>\r\n                          <div className=\"marketCapChangePercentage24h\">Market cap change percentage 24h: {allinfo[coin].market_cap_change_percentage_24h}</div>\r\n                          <div className=\"marketCapRank\">Market cap rank: #{allinfo[coin].market_cap_rank}</div>\r\n                          <div className=\"maxSupply\">Max supply: ${allinfo[coin].max_supply}</div>\r\n                          <div className=\"priceChange24h\">Price change 24h: ${allinfo[coin].price_change_24h}</div>\r\n                          <div className=\"priceChangePercentage24h\">Price change percentage 24h: {allinfo[coin].price_change_percentage_24h}%</div>\r\n                          <div className=\"roi\">Return on investment: {allinfo[coin].roi}</div>\r\n                          <div className=\"totalSupply\">Total supply: {allinfo[coin].total_supply}</div>\r\n                          <div className=\"totalVolume\">Total volume: {allinfo[coin].total_volume}</div> */}\r\n                          \r\n                      </div>\r\n                  )\r\n              })\r\n            }\r\n            \r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport CryptoShuttleService from \"../../utils/api/services/CryptoShuttleService\";\r\nimport { CoinInfo } from \"./CoinInfo\";\r\n\r\nexport const CoinInfoBox = () =>  {\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const [coinInfo, setCoinInfo] = useState()\r\n    const [error, setError] = useState(null)\r\n    let { slug } = useParams()\r\n\r\n    const fetchCoinInfo = async (slug) => {\r\n        try {\r\n            const response = await CryptoShuttleService.coinInfo(slug)\r\n            setIsLoading(false)\r\n            setCoinInfo(response.data)\r\n\r\n        }\r\n        catch (error){\r\n            setIsLoading(false)\r\n            setError(error)\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchCoinInfo(slug)\r\n    }, [slug])\r\n\r\n    if (!coinInfo) return \"\"\r\n    else if (error) {\r\n        return `Error: ${error.message}`\r\n    }\r\n    return (\r\n        <CoinInfo coinInfo= {coinInfo}/>\r\n        \r\n    )\r\n}","import { useParams } from 'react-router-dom'\r\n\r\nconst SaveLastViewed = () => {\r\n    let { slug } = useParams()\r\n\r\n\r\n    const saveLastViewed = () => {\r\n        let lastViewedCoins = JSON.parse(localStorage.getItem(\"lastViewedCoins\"));\r\n\r\n        if (lastViewedCoins) {\r\n            if (lastViewedCoins.length > 5) {\r\n                lastViewedCoins.shift()\r\n            }\r\n            if (lastViewedCoins.indexOf(slug) === -1) { \r\n                lastViewedCoins.push(slug)\r\n            }\r\n        }else {\r\n            lastViewedCoins = []\r\n        }\r\n\r\n        localStorage.setItem(\"lastViewedCoins\", JSON.stringify(lastViewedCoins));\r\n    }\r\n\r\n    saveLastViewed()\r\n\r\n    return false;\r\n}\r\n\r\nexport default SaveLastViewed","import React, {useState, createContext} from 'react'\r\n\r\nexport const PopupsContext = createContext()\r\n\r\nexport const PopupsProvider = (props)  => {\r\n    const [open, setOpen]   = useState()\r\n\r\n    return(\r\n        <PopupsContext.Provider value = {[open, setOpen]}>\r\n            {props.children}\r\n        </PopupsContext.Provider>\r\n    )\r\n}","import React, {useContext} from 'react'\r\nimport \"./SignUpLink.css\"\r\nimport { PopupsContext } from \"../../shared/global/provider/PopupsProvider\"\r\n\r\n\r\nexport const SignUpLink = () => {\r\n    const [open, setOpen] = useContext(PopupsContext)\r\n    \r\n    \r\n    \r\n\r\n    return (\r\n\r\n        <div className=\"sign-up-link\">\r\n            \r\n                \r\n                <p>New to Crypto Shuttle? </p>\r\n                <p onClick={() => {setOpen(true)}} className=\"register\"> Create an account</p>\r\n\r\n                \r\n            \r\n\r\n\r\n        </div>\r\n\r\n\r\n    )\r\n\r\n\r\n}","import { useState, useEffect } from 'react';\r\n\r\n\r\nconst useForm = (callback, validate) => {\r\n\r\n  const [values, setValues] = useState({});\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  \r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && isSubmitting) {\r\n      callback();\r\n    }\r\n  }, [errors]);\r\n  \r\n  const handleSubmit = (event) => {\r\n    if (event) event.preventDefault();\r\n    setErrors(validate(values));\r\n    setIsSubmitting(true);\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    event.persist();\r\n    setValues(values => ({ ...values, [event.target.name]: event.target.value }));\r\n  };\r\n\r\n  return {\r\n    handleChange,\r\n    handleSubmit,\r\n    values,\r\n    errors,\r\n  }\r\n};\r\n\r\nexport default useForm;","export default function validate(values) {\r\n\r\n    let errors = {};\r\n    if (!values.email) {\r\n      errors.email = 'Email address is required';\r\n    } else if (!/\\S+@\\S+\\.\\S+/.test(values.email)) {\r\n      errors.email = 'Email address is invalid';\r\n    }\r\n    if (!values.password) {\r\n      errors.password = 'Password is required';\r\n    } else if (values.password.length < 3) {\r\n      errors.password = 'Password must be 3 or more characters';\r\n    }\r\n    return errors;\r\n  };\r\n  ","import React, { useContext, useState } from \"react\"\r\nimport './LoginButton.css'\r\nimport Popup from \"reactjs-popup\"\r\nimport { UserContext } from \"../../shared/global/provider/UserProvider\"\r\nimport CryptoShuttleService from \"../../utils/api/services/CryptoShuttleService\"\r\nimport { PopupsContext } from \"../../shared/global/provider/PopupsProvider\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faEye } from '@fortawesome/free-solid-svg-icons'\r\nimport { faEyeSlash } from '@fortawesome/free-solid-svg-icons'\r\nimport useForm from \"./UseForm\"\r\nimport validate from \"./LoginFormValidationRules\"\r\n\r\n\r\nexport const LoginButton = () => {\r\n\r\n    const [authenticatedUser, setAuthenticatedUser] = useContext(UserContext)\r\n    const [open, setOpen] = useContext(PopupsContext)\r\n    const [passwordShown, setPasswordShown] = useState(false)\r\n    const eye = <FontAwesomeIcon icon={faEye} />;\r\n    const eyeSlash = <FontAwesomeIcon icon={faEyeSlash} />;\r\n\r\n    const togglePasswordVisiblity = () => {\r\n        setPasswordShown(passwordShown ? false : true);\r\n    };\r\n\r\n    const {\r\n        values,\r\n        errors,\r\n        handleChange,\r\n        handleSubmit,\r\n    } = useForm(login, validate);\r\n\r\n\r\n\r\n    async function login(e) {\r\n        if (e) e.preventDefault()\r\n        console.log('No errors, submit callback called!');\r\n\r\n        try {\r\n            const email = values.email\r\n            const password = values.password\r\n            const userFromServer = await CryptoShuttleService.loginUser({ email, password })\r\n            setAuthenticatedUser(userFromServer.data.access_token)\r\n            localStorage.setItem(\"token\", userFromServer.data.access_token)\r\n            let btn = document.getElementById('forecastBtn')\r\n            if (btn) {\r\n\r\n                btn.removeAttribute(\"hidden\")\r\n            }\r\n\r\n        }\r\n        catch (error) {\r\n            document.getElementById(\"noMatch\").style.visibility = \"visible\"\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div >\r\n            <Popup trigger={<button className=\"triggerButton\"> Login</button>} modal >\r\n                {close => (\r\n                    <div className=\"wrapper\">\r\n\r\n                        <button className=\"close\" onClick={close}>\r\n                            &times;\r\n                        </button>\r\n                        <h4>Log In</h4>\r\n                        <div>\r\n                            New to Crypto Shuttle?\r\n                            <span className=\"create-account\" onClick={() => { close(); setOpen(true) }}> Create an account.</span>\r\n                        </div><br />\r\n\r\n                        <form onSubmit={handleSubmit} noValidate>\r\n                            <div>\r\n                                <label htmlFor=\"email\">Email</label><input autoComplete=\"off\" className={`input  ${errors.email}`} type=\"email\" name=\"email\" onChange={handleChange} value={values.email || ''} required />\r\n                                {errors.email && (\r\n                                    <p className=\"help\">{errors.email}</p>\r\n                                )}\r\n                            </div><br />\r\n                            <div className=\"login-password-icon\">\r\n                                <label htmlFor=\"password\">Password</label>\r\n                                <input onChange={handleChange} name=\"password\" type={passwordShown ? \"text\" : \"password\"} className={`input ${errors.password}`} placeholder=\"Enter Password\" value={values.password || ''} required></input>\r\n                                {errors.password && (\r\n                                    <p className=\"help\">{errors.password}</p>\r\n                                )}\r\n                                <i className=\"eye-icon-login\" onClick={togglePasswordVisiblity}>{passwordShown ? eyeSlash : eye}</i>\r\n                            </div><br />\r\n                            <div id=\"noMatch\">Your email and password doesnt match. Please try again</div>\r\n                            <button type=\"submit\" className=\"submit\">Submit</button>\r\n                        </form>\r\n                    </div>\r\n                )}\r\n            </Popup>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { useState } from 'react'\r\nimport './Forecast.css'\r\nimport CryptoShuttleService from '../../utils/api/services/CryptoShuttleService'\r\n\r\nconst ForecastInfo = (data) => {\r\n\r\n    const [showSaveInfo, setShowSaveInfo] = useState(false)\r\n    //Converts the timestamp to a readable string\r\n    Object.values(data.forecastInfo).map((val) => {\r\n        val.buy_date = (new Date(val.buy_date)).toISOString().substr(0, 10).valueOf();\r\n        val.sell_date = (new Date(val.sell_date)).toISOString().substr(0, 10).valueOf();\r\n        return val\r\n    })\r\n\r\n    const handleClick = () => {\r\n        \r\n        Object.keys(data.forecastInfo).map((key, index) => {\r\n \r\n            const info = {\r\n                \"user\" : data.user.id,\r\n                \"date_made\": Date.now(),\r\n                \"coin\": Object.keys(data.forecastInfo)[index],\r\n                \"buy_date\": data.forecastInfo[key].buy_date,\r\n                \"buy_price\": data.forecastInfo[key].buy_price,\r\n                \"max_gain_procent\": data.forecastInfo[key].max_gain_procent,\r\n                \"sell_date\": data.forecastInfo[key].sell_date,\r\n                \"sell_price\": data.forecastInfo[key].sell_price\r\n            }\r\n            try{\r\n                CryptoShuttleService.saveForecast(info)\r\n                console.log(\"Saved forecast\")\r\n                setShowSaveInfo(true)\r\n                return 200\r\n            }\r\n            catch (e) {\r\n                console.log(e.message);\r\n                return 400\r\n            }   \r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"forecast-info\">\r\n            {Object.keys(data.forecastInfo).map((key, index) => (\r\n                <div key={index}>\r\n                    <table>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Max Gain</th>\r\n                                <th>Buy Date</th>\r\n                                <th>Buy Price</th>\r\n                                <th>Sell Date</th>\r\n                                <th>Sell Price</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>{data.forecastInfo[key].max_gain_procent}%</td>\r\n                                <td>{data.forecastInfo[key].buy_date}</td>\r\n                                <td>${data.forecastInfo[key].buy_price}</td>\r\n                                <td>{data.forecastInfo[key].sell_date}</td>\r\n                                <td>${data.forecastInfo[key].sell_price}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                    <div className=\"saveForecastInfoButton\">\r\n                        <button onClick={handleClick}>Save forecast suggestions</button>\r\n                    </div>\r\n                    <div className=\"save-info\">{showSaveInfo ? \"Saved forecast.\" : null}</div>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ForecastInfo","export default __webpack_public_path__ + \"static/media/hadija-saidi-9cgMKmZyhH0-unsplash.ac577b47.jpg\";","import React from 'react'\r\nimport './Forecast.css'\r\nimport moment from 'moment'\r\nimport {\r\n    ResponsiveContainer,\r\n    AreaChart,\r\n    XAxis,\r\n    YAxis,\r\n    Area,\r\n    Tooltip,\r\n    CartesianGrid,\r\n} from \"recharts\";\r\nimport Logotype from '../../shared/images/hadija-saidi-9cgMKmZyhH0-unsplash.jpg'\r\n\r\nconst ForecastGraph = (data) => {\r\n    var total = Object.keys(data.forecastGraph).length;\r\n    const percentage = 100 - ((365 / total) * 100)\r\n\r\n    // Customises the graphs ticks on the X-axis\r\n    const CustomizedAxisTick = ({ x, y, payload }) => {\r\n        const dateTip = moment(payload.value)\r\n            .format(\"YYYY-MM-DD\")\r\n        return (\r\n            <g transform={`translate(${x},${y})`}>\r\n                <text x={23} y={0} dy={14} fontSize=\"0.90em\" fontFamily=\"bold\" textAnchor=\"end\" fill=\"#363636\">\r\n                    {dateTip}</text>\r\n            </g>\r\n        );\r\n    }\r\n\r\n    // Customises the graphs tooltips box\r\n    const CustomTooltip = ({ active, payload, label }) => {\r\n        const dateTip = moment(label)\r\n            .format(\"ll\")\r\n            .slice(0, 12);\r\n        const formattedDate = dateTip\r\n        if (payload === null) return\r\n        if (active)\r\n            return (\r\n                <div className=\"custom-tooltip\">\r\n                    <p className=\"label-tooltip\">{`${formattedDate}`}</p>\r\n                    <p className=\"desc-tooltip\">\r\n                        <span className=\"value-tooltip\">Price: {payload[0].value.toLocaleString()}</span>\r\n                    </p>\r\n                </div>\r\n            );\r\n        return null;\r\n    };\r\n\r\n    return (\r\n        <div className=\"forecast-graph\">\r\n            <ResponsiveContainer width=\"100%\" height={400}>\r\n                <AreaChart data={Object.values(data.forecastGraph)}>\r\n                    <defs>\r\n                        <linearGradient id=\"gradient\" x1=\"0\" y1=\"0\" x2=\"100%\" y2=\"0\">\r\n                            <stop offset=\"0%\" stopColor=\"blue\" />\r\n                            <stop offset={`${percentage}%`} stopColor=\"blue\" />\r\n                            <stop offset={`${percentage}%`} stopColor=\"red\" />\r\n                            <stop offset=\"100%\" stopColor=\"red\" />\r\n                        </linearGradient>\r\n                    </defs>\r\n                    <Area dataKey=\"yhat\" stroke=\"url(#gradient)\" fill=\"url(#gradient)\" fillOpacity={0.4} />\r\n                    <XAxis\r\n                        dataKey=\"ds\"\r\n                        tick={CustomizedAxisTick}\r\n                    />\r\n                    <YAxis\r\n                        dataKey=\"yhat\"\r\n                        axisLine={false}\r\n                        tickLine={false}\r\n                        tickCount={8}\r\n                        tickFormatter={(number) => `$${number}`}\r\n                    />\r\n                    <Tooltip content={<CustomTooltip />} animationDuration={0} />\r\n                    <CartesianGrid opacity={0.4} vertical={false} />\r\n                </AreaChart>\r\n            </ResponsiveContainer>\r\n            <div className=\"graph-info\">\r\n                <article>\r\n                    <div className=\"expl-text\">\r\n                        <h3>Prediction Graph</h3>\r\n                        \r\n                        <p>Our prediction model is created by using historical data and the FbProphet AI model with multiplicative seasonality. \r\n                        Why multiplicative instead of addiative? The choice came down to looking at the data and realizing that it is not linear at all, \r\n                        because it is a market with an ever changing curve. The graph is showing predictons from past til future. The model has taking in to account all the data.\r\n                        Then we use filtering methods to find lowest and highest points in the dataset to be able to calculate when to buy and when to sell(only a prediciton).</p>\r\n                    </div>\r\n                    <div className=\"expl-picture\">\r\n                        <img src={Logotype} alt=\"img\"></img>\r\n                    </div>\r\n                </article>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default ForecastGraph","export default __webpack_public_path__ + \"static/media/graph-line.e1b21c14.jpg\";","import React from 'react'\r\nimport './Forecast.css'\r\nimport moment from 'moment'\r\nimport {\r\n    ResponsiveContainer,\r\n    XAxis,\r\n    YAxis,\r\n    Tooltip,\r\n    CartesianGrid,\r\n    LineChart,\r\n    Line,\r\n    Legend,\r\n} from \"recharts\";\r\nimport Logotype from '../../shared/images/graph-line.jpg'\r\n\r\nconst ForecastMultiple = (data) => {\r\n\r\n    // Customises the graphs ticks on the X-axis\r\n    const CustomizedAxisTick = ({ x, y, payload }) => {\r\n        const dateTip = moment(payload.value)\r\n            .format(\"YYYY-MM-DD\")\r\n        return (\r\n            <g transform={`translate(${x},${y})`}>\r\n                <text x={23} y={0} dy={14} fontSize=\"0.90em\" fontFamily=\"bold\" textAnchor=\"end\" fill=\"#363636\">\r\n                    {dateTip}</text>\r\n            </g>\r\n        );\r\n    }\r\n\r\n    // Customises the graphs tooltips box\r\n    const CustomTooltip = ({ active, payload, label }) => {\r\n        const dateTip = moment(label)\r\n            .format(\"ll\")\r\n            .slice(0, 12);\r\n        const formattedDate = dateTip\r\n        if (payload === null) return\r\n        if (active)\r\n            return (\r\n                <div className=\"custom-tooltip\">\r\n                    <p className=\"label-tooltip\">{`${formattedDate}`}</p>\r\n                    <p className=\"desc-tooltip\">\r\n                        <span className=\"value-tooltip\">Price: {payload[0].value.toLocaleString()}</span>\r\n                    </p>\r\n                </div>\r\n            );\r\n        return null;\r\n    };\r\n\r\n    return (\r\n        <div className=\"forecast-multiple\">\r\n            <ResponsiveContainer width=\"100%\" height={400}>\r\n                <LineChart data={Object.values(data.forecastMultiple)}>\r\n                    <XAxis\r\n                        dataKey=\"ds\"\r\n                        tick={CustomizedAxisTick}\r\n                    />\r\n                    <YAxis\r\n                        tickCount={8}\r\n                        tickFormatter={(number) => `$${number}`}\r\n                    />\r\n                    <Line name=\"Predicted Upper\" dataKey=\"yhat_upper\" stroke=\"#82ca9d\" dot={false} strokeWidth={1} />\r\n                    <Line name=\"Predicted\" dataKey=\"yhat\" stroke=\"#ffc658\" dot={false} strokeWidth={1} />\r\n                    <Line name=\"Predicted Lower\" dataKey=\"yhat_lower\" stroke=\"#8884d8\" dot={false} strokeWidth={1} />\r\n                    <Tooltip content={<CustomTooltip />} animationDuration={0} />\r\n                    <Legend verticalAlign=\"top\" height={36} />\r\n                    <CartesianGrid opacity={0.4} />\r\n                </LineChart>\r\n            </ResponsiveContainer>\r\n            <div className=\"graph-info\">\r\n                <article>\r\n                    <div className=\"expl-text\">\r\n                        <h3>Multiple Graph</h3>\r\n                        \r\n                        <p>\r\n                        Here you see another graph with the same dataset as before but with possibilites to create an assumtion for yourself.\r\n                        The three lines in this graph represent the upper predicted value, the median and the lowest predicited value. \r\n                        These are all created during the process of predicting on the dataset. The \"Predicted\" value is the one used in the graph above. </p>\r\n                    </div>\r\n                    <div className=\"expl-picture\">\r\n                        <img src={Logotype} alt=\"img\"></img>\r\n                    </div>\r\n                </article>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ForecastMultiple","import React from \"react\";\r\nimport './RocketLoader.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faRocket } from '@fortawesome/free-solid-svg-icons'\r\n\r\n\r\nconst RocketLoader = () => {\r\n\r\n   \r\n        \r\n    \r\n    return (\r\n            \r\n            \r\n        <div className=\"loader-body\">\r\n            <div className=\"loader\">\r\n                <div className=\"rocket\">\r\n                    <FontAwesomeIcon icon={faRocket}/>\r\n                </div>\r\n                <div className=\"dot\"></div>\r\n            </div>\r\n        </div>\r\n\r\n            \r\n            \r\n    )\r\n\r\n    \r\n\r\n               \r\n}\r\nexport default RocketLoader\r\n\r\n\r\n","import React, { useEffect, useState } from 'react'\r\nimport CryptoShuttleService from '../../utils/api/services/CryptoShuttleService';\r\nimport './Forecast.css'\r\nimport ForecastInfo from './ForecastInfo.js'\r\nimport ForecastGraph from './ForecastGraph.js'\r\nimport ForecastMultiple from './ForecastMultiple.js'\r\nimport { useParams } from 'react-router-dom'\r\nimport RocketLoader from '../RocketLoader/RocketLoader';\r\n\r\nconst Forecast = (props) => {\r\n    const [error, setError] = useState(null);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [forecastInfo, setForecastInfo] = useState([]);\r\n    const [forecastGraph, setForecastGraph] = useState([]);\r\n    const [forecastMultiple, setForecastMultiple] = useState([]);\r\n    let { slug } = useParams();\r\n    let token = localStorage.getItem('token')\r\n\r\n    const fetchData = async (slug, token) => {\r\n        try {\r\n            const { data } = await CryptoShuttleService.forecastInfo(slug, token)\r\n            setIsLoaded(true);\r\n            setForecastInfo(data.coin);\r\n            setForecastGraph(data.graph);\r\n            setForecastMultiple(data.multiple);\r\n        } catch (error) {\r\n            setIsLoaded(true);\r\n            setError(error);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchData(slug, token)\r\n    }, [slug, token])\r\n\r\n    if (error) {\r\n        return <div>Error: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n        return <RocketLoader/>;\r\n    } else {\r\n        return (\r\n            <div className=\"forecast\">\r\n                <ForecastInfo forecastInfo={forecastInfo} user={props.user}/>\r\n                <ForecastGraph forecastGraph={forecastGraph} />\r\n                <ForecastMultiple forecastMultiple={forecastMultiple} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Forecast","export default __webpack_public_path__ + \"static/media/rocket-space-x.ce94a25b.jpg\";","import React from 'react'\r\nimport './LesserForecast.css'\r\nimport moment from 'moment'\r\nimport {\r\n    ResponsiveContainer,\r\n    AreaChart,\r\n    XAxis,\r\n    YAxis,\r\n    Area,\r\n    Tooltip,\r\n    CartesianGrid,\r\n} from \"recharts\";\r\nimport Logotype from '../../shared/images/rocket-space-x.jpg'\r\nconst LesserForecastGraph = (data) => {\r\n\r\n\r\n\r\n    // Customises the graphs ticks on the X-axis\r\n    const CustomizedAxisTick = ({ x, y, payload }) => {\r\n        const dateTip = moment(payload.value)\r\n            .format(\"YYYY-MM-DD\")\r\n        return (\r\n            <g transform={`translate(${x},${y})`}>\r\n                <text x={23} y={0} dy={14} fontSize=\"0.90em\" fontFamily=\"bold\" textAnchor=\"end\" fill=\"#363636\">\r\n                    {dateTip}</text>\r\n            </g>\r\n        );\r\n    }\r\n\r\n    // Customises the graphs tooltips box\r\n    const CustomTooltip = ({ active, payload, label }) => {\r\n        const dateTip = moment(label)\r\n            .format(\"ll\")\r\n            .slice(0, 12);\r\n        const formattedDate = dateTip\r\n        if (payload === null) return\r\n        if (active)\r\n            return (\r\n                <div className=\"custom-tooltip\">\r\n                    <p className=\"label-tooltip\">{`${formattedDate}`}</p>\r\n                    <p className=\"desc-tooltip\">\r\n                        <span className=\"value-tooltip\">Price: {payload[0].value.toLocaleString()}</span>\r\n                    </p>\r\n                </div>\r\n            );\r\n        return null;\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"forecast-graph\">\r\n            <h3>15-days preditcion</h3>\r\n            \r\n            <ResponsiveContainer width=\"100%\" height={400}>\r\n                <AreaChart data={Object.values(data.lesserForecastGraph)}>\r\n                    <defs>\r\n                    <linearGradient id=\"color\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                        <stop offset=\"0%\" stopColor=\"#2451B7\" stopOpacity={0.8} />\r\n                        <stop offset=\"75%\" stopColor=\"#2451B7\" stopOpacity={0.2} />\r\n                    </linearGradient>\r\n                    </defs>\r\n                    <Area dataKey=\"yhat\" stroke=\"#2451B7\" fill=\"url(#color)\" />\r\n                    <XAxis\r\n                        dataKey=\"ds\"\r\n                        tick={CustomizedAxisTick}\r\n                    />\r\n                    <YAxis\r\n                        dataKey=\"yhat\"\r\n                        axisLine={false}\r\n                        tickLine={false}\r\n                        tickCount={8}\r\n                        tickFormatter={(number) => `$${number}`}\r\n                    />\r\n                    <Tooltip content={<CustomTooltip />} animationDuration={0} />\r\n                    <CartesianGrid opacity={0.4} vertical={false} />\r\n                </AreaChart>\r\n            </ResponsiveContainer>\r\n\r\n            <div className=\"graph-info\">\r\n                <article>\r\n                    <div className=\"expl-text\">\r\n                        <h3>Prediction Graph</h3>\r\n                        \r\n                        <p>Our prediction model is created by using historical data and the FbProphet AI model with multiplicative seasonality. \r\n                        Why multiplicative instead of addiative? The choice came down to looking at the data and realizing that it is not linear at all, \r\n                        because it is a market it is a ever chaning curve. This graph shows a restricted amount of days in the future.\r\n                        To be able to see the use of filtering methods that shows when to buy and sell, win/loss percentage etc. (create an account). \r\n                        </p>\r\n                    </div>\r\n                    <div className=\"expl-picture\">\r\n                        <img src={Logotype} alt=\"img\"></img>\r\n                    </div>\r\n                </article>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default LesserForecastGraph","import React, { useEffect, useState } from 'react'\r\nimport CryptoShuttleService from '../../utils/api/services/CryptoShuttleService';\r\nimport { useParams } from 'react-router-dom'\r\nimport RocketLoader from '../RocketLoader/RocketLoader';\r\nimport LesserForecastGraph from './LesserForecastGraph';\r\n\r\nconst LesserForecast = (props) => {\r\n    const [error, setError] = useState(null);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [lesserForecastGraph, setLesserForecastGraph] = useState([]);\r\n    let { slug } = useParams();\r\n    \r\n\r\n    const fetchData = async (slug) => {\r\n        try {\r\n            const { data } = await CryptoShuttleService.lesserForecastInfo(slug)\r\n            setIsLoaded(true);\r\n            setLesserForecastGraph(data.multiple)\r\n        } catch (error) {\r\n            setIsLoaded(true);\r\n            setError(error);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchData(slug)\r\n    }, [slug])\r\n\r\n    if (error) {\r\n        return <div>Error: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n        return <RocketLoader/>;\r\n    } else {\r\n        return (\r\n            <div className=\"lesser-forecast\">\r\n               <LesserForecastGraph lesserForecastGraph={lesserForecastGraph} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LesserForecast","import React,{useState, useContext, useRef} from \"react\";\r\nimport Forecast from \"./Forecast\";\r\nimport CryptoShuttleService from \"../../utils/api/services/CryptoShuttleService\";\r\nimport { UserContext } from '../../shared/global/provider/UserProvider'\r\nimport LesserForecast from \"../LesserForecast/LesserForecast\";\r\n\r\nexport const RunForecastButton = () => {\r\n    let btnRef = useRef();\r\n    const [showResults, setShowResults] = React.useState(false)\r\n    const [authenticatedUser, setAuthenticatedUser] = useContext(UserContext)\r\n    let  [user, setUser] = useState()\r\n    const onClick = () => {setShowResults(true)\r\n        \r\n        if(authenticatedUser != null && btnRef.current){\r\n            btnRef.current.setAttribute(\"hidden\", \"hidden\");\r\n            \r\n            \r\n        }\r\n        \r\n        else if(authenticatedUser == null && btnRef.current){\r\n            \r\n            btnRef.current.setAttribute(\"hidden\", \"hidden\")\r\n            \r\n        } \r\n\r\n        \r\n        userAuthBackend()\r\n        \r\n        \r\n    }\r\n    \r\n    const userAuthBackend = async () => {\r\n        \r\n        setAuthenticatedUser(localStorage.getItem('token'))\r\n        \r\n\r\n        if(authenticatedUser == null){\r\n            console.log('login to use')\r\n        }else if(authenticatedUser != null) {\r\n                \r\n                \r\n            try{\r\n                const getUserWithToken = await CryptoShuttleService.getLoggedInUser(localStorage.getItem('token'))\r\n                setUser(getUserWithToken.data.logged_in_as)\r\n                \r\n            }\r\n            catch(e){\r\n                console.log(e.message);\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        \r\n        \r\n        <div className=\"forecast-button\">\r\n            <input ref={btnRef} id=\"forecastBtn\" type=\"submit\" value=\"Launch Forecast\" onClick={onClick} />\r\n            { showResults && user && <Forecast user={user}/> }\r\n            { !user && showResults && <LesserForecast/> }\r\n            \r\n        </div>\r\n\r\n\r\n\r\n\r\n\r\n    )\r\n\r\n\r\n\r\n\r\n}","import React, { useState, useContext, useRef } from \"react\";\r\nimport './CoinView.css'\r\nimport CoinHistoryGraph from '../../components/CoinHistoryGraph/CoinHistoryGraph'\r\nimport { CoinInfoBox } from '../../components/CoinInfoBox/CoinInfoBox'\r\n\r\nimport SaveLastViewed from '../../components/SaveLastViewed/SaveLastViewed'\r\nimport CryptoShuttleService from \"../../utils/api/services/CryptoShuttleService\";\r\nimport { UserContext } from '../../shared/global/provider/UserProvider'\r\nimport { SignUpLink } from \"../../components/SignUpLink/SignUpLink\";\r\nimport { LoginButton } from \"../../components/LoginButton/LoginButton\";\r\nimport { RunForecastButton } from \"../../components/Forecast/RunForecastButton\";\r\n\r\n\r\n\r\nexport const CoinView = () => {\r\n    const signInRef = useRef()\r\n    const [authenticatedUser, setAuthenticatedUser] = useContext(UserContext)\r\n\r\n\r\n\r\n    const displayIfNotAuth = () => {\r\n\r\n\r\n        if (authenticatedUser != null && signInRef.current) {\r\n            signInRef.current.setAttribute(\"hidden\", \"hidden\")\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <div className=\"coin-view\">\r\n                <CoinInfoBox />\r\n                <CoinHistoryGraph />\r\n                <SaveLastViewed />\r\n                <RunForecastButton />\r\n\r\n                <div ref={signInRef} className=\"sign-in\">\r\n                    <div className=\"inside-div\">\r\n                        <span>\r\n                            {authenticatedUser == null && <LoginButton />}\r\n                            {authenticatedUser == null && <SignUpLink />}\r\n\r\n                            {displayIfNotAuth()}\r\n                        </span>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useContext, useEffect } from 'react'\r\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom'\r\nimport { HomeView } from '../views/HomeView'\r\nimport { UserContext } from '../shared/global/provider/UserProvider'\r\nimport { UserView } from '../views/UserView'\r\nimport { CoinView } from '../views/CoinView/CoinView'\r\n\r\n\r\n\r\nexport const Routing = (props) => {\r\n\r\n    const [authenticatedUser, setAuthenticatedUser] = useContext(UserContext)\r\n\r\n    const checkIfUserIsAuthenticatedInBrowser = () => {\r\n        setAuthenticatedUser(localStorage.getItem(\"token\"))\r\n        console.log(authenticatedUser)\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        checkIfUserIsAuthenticatedInBrowser()\r\n    })\r\n\r\n    return (\r\n\r\n        <Router>\r\n            {props.children}\r\n            <Switch>\r\n                <Route exact path=\"/userpage\" component={UserView} />\r\n                <Route path=\"/coins/:slug\" component={CoinView} />\r\n                <Route component={HomeView} />\r\n\r\n            </Switch>\r\n        </Router>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport CryptoShuttleService from '../../utils/api/services/CryptoShuttleService';\r\nimport './Search.css'\r\n\r\nexport const Search = () => {\r\n    const [error, setError] = useState(null);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [search, setSearch] = useState([]);\r\n    const [filteredData, setFilteredData] = useState([]);\r\n\r\n    const fetchData = async () => {\r\n        try {\r\n            const { data } = await CryptoShuttleService.search()\r\n            setIsLoaded(true);\r\n            setSearch(data.names);\r\n        } catch (error) {\r\n            setIsLoaded(true);\r\n            setError(error);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchData()\r\n    }, [])\r\n\r\n    const handleFilter = (event) => {\r\n        const searchWord = event.target.value\r\n        const newFilter = search.filter((value) =>{\r\n            return value.id.toLowerCase().startsWith(searchWord.toLowerCase())\r\n            // return value.id.toLowerCase().includes(searchWord.toLowerCase())\r\n        });\r\n        if(searchWord === \"\") {\r\n            setFilteredData([]);\r\n        }else {\r\n            setFilteredData(newFilter)\r\n        }\r\n    }\r\n\r\n    if (error) {\r\n        return <div>Error: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n        return <div></div>;\r\n    } else {\r\n        return (\r\n            <div className=\"search\">\r\n                <div className=\"searchInputs\">\r\n                    <input type=\"text\" placeholder=\"Search...\" onChange={handleFilter} />\r\n                </div>\r\n                {filteredData.length !== 0 && ( \r\n                    <div className=\"dataResult\">\r\n                        {filteredData.map((value, key) => {\r\n                            return(\r\n                            <a key={key} className=\"dataItem\" href={`/coins/${value.id}`}>\r\n                                <p>{value.id}</p>\r\n                            </a>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                )}\r\n            </div>\r\n        )\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/logotype.5ce7f0fc.svg\";","import React, {useState, createContext} from 'react'\r\n\r\nexport const RegUserContext = createContext()\r\n\r\nexport const RegUserProvider = (props)  => {\r\n    const [registerError, setRegisterError]   = useState()\r\n\r\n    return(\r\n        <RegUserContext.Provider value = {[registerError, setRegisterError]}>\r\n            {props.children}\r\n        </RegUserContext.Provider>\r\n    )\r\n}","import { useState, useEffect, useContext } from 'react';\r\nimport { RegUserContext } from '../../shared/global/provider/RegUserProvider';\r\n\r\n\r\nconst useForm = (callback, validate) => {\r\n\r\n  const [values, setValues] = useState({});\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [registerError,setRegisterError] = useContext(RegUserContext)\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && isSubmitting) {\r\n      callback();\r\n    }\r\n  }, [errors]);\r\n  \r\n  const handleSubmit = (event) => {\r\n    if (event) event.preventDefault();\r\n    setRegisterError(null)\r\n    setErrors(validate(values));\r\n    setIsSubmitting(true);\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    event.persist();\r\n    setValues(values => ({ ...values, [event.target.name]: event.target.value }));\r\n  };\r\n\r\n  return {\r\n    handleChange,\r\n    handleSubmit,\r\n    values,\r\n    errors,\r\n  }\r\n};\r\n\r\nexport default useForm;","export default function validate(values) {\r\n\r\n    let errors = {};\r\n    if (!values.email) {\r\n      errors.email = 'Email address is required';\r\n    } else if (!/\\S+@\\S+\\.\\S+/.test(values.email)) {\r\n      errors.email = 'Email address is invalid';\r\n    }\r\n    if(!values.name){\r\n        errors.name = 'Name is required';\r\n    }\r\n    if (!values.password) {\r\n      errors.password = 'Password is required';\r\n    } else if (values.password.length < 3) {\r\n      errors.password = 'Password must be 3 or more characters';\r\n    }\r\n    if(!values.confirmPassword){\r\n        errors.confirmPassword = 'Confirm Password is required';\r\n    }else if(values.password !== values.confirmPassword){\r\n        errors.confirmPassword = 'Passwords do not match'\r\n    }\r\n    return errors;\r\n  };\r\n  ","import React, { useContext, useState } from \"react\"\r\nimport './Register.css'\r\nimport useForm from \"./UseForm\";\r\nimport validate from './RegisterFormValidationRules';\r\nimport CryptoShuttleService from '../../utils/api/services/CryptoShuttleService';\r\nimport { UserContext } from \"../../shared/global/provider/UserProvider\"\r\nimport { RegUserContext } from \"../../shared/global/provider/RegUserProvider\";\r\nimport Popup from \"reactjs-popup\";\r\nimport { PopupsContext } from \"../../shared/global/provider/PopupsProvider\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faEye } from '@fortawesome/free-solid-svg-icons'\r\nimport { faEyeSlash } from '@fortawesome/free-solid-svg-icons'\r\n\r\nexport const Register = (props) => {\r\n\r\n    const [authenticatedUser, setAuthenticatedUser] = useContext(UserContext)\r\n    const [registerError, setRegisterError] = useContext(RegUserContext)\r\n    const [open, setOpen] = useContext(PopupsContext);\r\n    const closeModal = () => setOpen(false);\r\n    const [passwordShown, setPasswordShown] = useState(false)\r\n    const eye = <FontAwesomeIcon icon={faEye} />;\r\n    const eyeSlash = <FontAwesomeIcon icon={faEyeSlash} />;\r\n\r\n    const togglePasswordVisiblity = () => {\r\n        setPasswordShown(passwordShown ? false : true);\r\n    };\r\n\r\n    const {\r\n        values,\r\n        errors,\r\n        handleChange,\r\n        handleSubmit,\r\n    } = useForm(login, validate);\r\n\r\n\r\n\r\n    const logInUser = async () => {\r\n\r\n        const email = values.email\r\n        const password = values.password\r\n        const userFromServer = await CryptoShuttleService.loginUser({ email, password })\r\n        setAuthenticatedUser(userFromServer.data.access_token)\r\n        localStorage.setItem(\"token\", userFromServer.data.access_token)\r\n    }\r\n\r\n\r\n    //registering user\r\n    async function login(e) {\r\n        if (e) e.preventDefault()\r\n        console.log('No errors, submit callback called!');\r\n\r\n\r\n        const userObject = {\r\n            \"email\": values.email,\r\n            \"name\": values.name,\r\n            \"password\": values.password,\r\n        }\r\n\r\n        try {\r\n            const response = await CryptoShuttleService.registerUser(userObject)\r\n            console.log(response);\r\n            logInUser();\r\n            closeModal()\r\n        }\r\n        catch (error) {\r\n            if (error.response.data) {\r\n                // Show error message from server\r\n                setRegisterError(error.response.data['error'])\r\n                document.getElementById(\"noMatch\").style.visibility = \"visible\"\r\n            }\r\n\r\n            console.error(error.message);\r\n        }\r\n    };\r\n\r\n    return (\r\n\r\n\r\n        <div>\r\n            <button type=\"button\" className=\"registerButton\" onClick={() => setOpen(o => !o)}>\r\n                Sign Up\r\n            </button>\r\n            <Popup open={open} closeOnDocumentClick onClose={closeModal}>\r\n                <div className=\"wrapper\">\r\n                    <button className=\"closeRegisterModal\" onClick={closeModal}>\r\n                        &times;\r\n                    </button>\r\n                    <h4>Register</h4>\r\n                    <form onSubmit={handleSubmit} noValidate>\r\n                        <div>\r\n                            <label htmlFor=\"email\">Email</label><input autoComplete=\"off\" className={`input  ${errors.email}`} type=\"email\" name=\"email\" onChange={handleChange} value={values.email || ''} required />\r\n                            {errors.email && (\r\n                                <p className=\"help\">{errors.email}</p>\r\n                            )}\r\n                        </div>\r\n                        <div>\r\n                            <label htmlFor=\"name\">Name</label><input autoComplete=\"off\" className={`input ${errors.name}`} type=\"text\" name=\"name\" onChange={handleChange} value={values.name || ''} required />\r\n                            {errors.name && (\r\n                                <p className=\"help\">{errors.name}</p>\r\n                            )}\r\n                        </div>\r\n                        <div className=\"register-password-icon\">\r\n                            <label htmlFor=\"password\">Password</label>\r\n                            \r\n                            <input className={`input ${errors.password}`} type={passwordShown ? \"text\" : \"password\"} name=\"password\" onChange={handleChange} value={values.password || ''} required />\r\n                            {errors.password && (\r\n                                <p className=\"help\">{errors.password}</p>\r\n                            )}\r\n                            <i className=\"eye-icon-register\" onClick={togglePasswordVisiblity}>{passwordShown ? eyeSlash : eye}</i>\r\n                        </div>\r\n                        <div>\r\n                            <label htmlFor=\"password\">Confirm Password</label>\r\n                            <input className={`input ${errors.confirmPassword}`} type=\"password\" name=\"confirmPassword\" onChange={handleChange} value={values.confirmPassword || ''} required />\r\n                            {errors.confirmPassword && (\r\n                                <p className=\"help\">{errors.confirmPassword}</p>\r\n                            )}\r\n                        </div><br />\r\n                        <div id=\"noMatch\">{registerError}</div>\r\n                        <button type=\"submit\" className=\"regSubmit\">Register</button>\r\n                    </form>\r\n                </div>\r\n            </Popup>\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useContext, useState}  from 'react'\r\nimport {UserContext} from '../../shared/global/provider/UserProvider'\r\nimport {useHistory} from 'react-router-dom'\r\nimport CryptoShuttleService from '../../utils/api/services/CryptoShuttleService'\r\nimport { LoginButton } from '../LoginButton/LoginButton'\r\nimport { Register } from '../register/Register'\r\n\r\nexport const Profile = () => {\r\n    const [authenticatedUser, setAuthenticatedUser] = useContext(UserContext)\r\n    const history = useHistory()\r\n    const [error, setError] = useState(null);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [user, setUser] = useState([]);\r\n    \r\n\r\n    const fetchData = async (authenticatedUser) => {\r\n        try {\r\n            const { data } = await CryptoShuttleService.getLoggedInUser(authenticatedUser)\r\n            setIsLoaded(true);\r\n            setUser(data);\r\n        } catch (error) {\r\n            setIsLoaded(true);\r\n            setError(error);\r\n        }\r\n    }\r\n    const handleUserPage = () =>{\r\n        history.push('/userpage')\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchData(authenticatedUser)\r\n    }, [authenticatedUser])\r\n\r\n   \r\n\r\n    const logout = async () => {\r\n\r\n        try{\r\n            const userFromServer = await CryptoShuttleService.logoutUser()\r\n            console.log(userFromServer)\r\n            localStorage.removeItem('token')\r\n            setAuthenticatedUser(false)\r\n            history.push('/')\r\n\r\n        }\r\n        catch(error){\r\n            console.log(\"funkar ej\")\r\n        }\r\n        \r\n    }\r\n\r\n    if (isLoaded && user.logged_in_as) {\r\n        return (\r\n            <div className=\"profileWrapper\">  \r\n                <button className=\"myPageButton\" onClick={handleUserPage}>My Page</button>\r\n                <button className=\"logOutButton\"  onClick={() => logout()}> Logout</button>\r\n                <span className=\"userLoggedIn\">{user.logged_in_as.name}</span>\r\n            </div>\r\n        )\r\n    }\r\n    else if (!isLoaded || !user.logged_in_as) {\r\n        return   (\r\n            <div className=\"logField\">\r\n                <div className=\"item\">\r\n                    <Register/>\r\n                </div>\r\n                <div className=\"item\">\r\n                    <LoginButton/>\r\n                </div>\r\n            </div>\r\n        )}\r\n    else if (error) {\r\n        return <div>Error: {error.message}</div>;\r\n    } \r\n     \r\n}","import React, { useEffect, useRef } from 'react'\r\nimport './Darkmode.css'\r\nimport {\r\n    setFetchMethod,\r\n    enable as enableDarkMode,\r\n    disable as disableDarkMode,\r\n    isEnabled as isDarkReaderEnabled\r\n} from 'darkreader';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faMoon, faSun } from '@fortawesome/free-solid-svg-icons'\r\n\r\nexport const Darkmode = () => {\r\n\r\n    // Sets darkmode\r\n    const darkmode = () => {\r\n        setFetchMethod(window.fetch)\r\n        enableDarkMode({\r\n            brightness: 100,\r\n            contrast: 90,\r\n            sepia: 10,\r\n        });\r\n    }\r\n\r\n    // Toggle between normal and darkmode\r\n    const toggleDarkmode = () => {\r\n        const isEnabled = isDarkReaderEnabled();\r\n\r\n        if (!isEnabled) {\r\n            darkmode()\r\n            localStorage.setItem(\"darkmode\", true);\r\n        } else {\r\n            disableDarkMode();\r\n            localStorage.setItem(\"darkmode\", false);\r\n        }\r\n    }\r\n\r\n    // Calls darkmode function if saved in localstorage\r\n    if (localStorage.getItem(\"darkmode\") === \"true\") {\r\n        darkmode()\r\n    } else {\r\n        disableDarkMode();\r\n    }\r\n\r\n    // Checks darkmode button if saved in localstorage\r\n    useEffect(() => {\r\n        if (localStorage.getItem(\"darkmode\") === \"true\") {\r\n            document.getElementById(\"darkmode-button\").checked = true;\r\n        } else {\r\n            document.getElementById(\"darkmode-button\").checked = false;\r\n        }\r\n    });\r\n\r\n    return (\r\n        <div className=\"darkmode\">\r\n            <label className=\"switch\">\r\n                <input id=\"darkmode-button\" onClick={toggleDarkmode} type=\"checkbox\"></input>\r\n                <span className=\"slider round\">\r\n                    <FontAwesomeIcon className=\"sun\" icon={faSun} />\r\n                    <FontAwesomeIcon className=\"moon\" icon={faMoon} />\r\n                </span>\r\n            </label>\r\n        </div>\r\n    )\r\n}","import React, {useContext} from 'react'\r\nimport { LoginButton } from '../LoginButton/LoginButton'\r\nimport { Search } from '../Search/Search'\r\nimport './NavigationBar.css'\r\nimport Logotype from '../../shared/images/logotype.svg'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Profile } from '../Profile/Profile'\r\nimport { UserContext} from '../../shared/global/provider/UserProvider'\r\nimport { Register } from '../register/Register'\r\nimport { Darkmode } from '../Darkmode/Darkmode'\r\n\r\nexport const NavigationBar = () => {\r\n    const history = useHistory();\r\n    const [authenticatedUser, setAuthenticatedUser] = useContext (UserContext)\r\n\r\n    \r\n    const displayUserIfAuthenticated = () => {\r\n        return (authenticatedUser) \r\n        ? \r\n        <Profile/>\r\n        : \r\n        <div className=\"logField\">\r\n            <div className=\"item\">\r\n                <Register/>\r\n            </div>\r\n            <div className=\"item\">\r\n                <LoginButton/>\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"navBar\">\r\n            <div className=\"top-navbar\">\r\n                <Darkmode />\r\n                <div className=\"signup-register\">\r\n                    {displayUserIfAuthenticated()}\r\n                </div>\r\n            </div>\r\n            <div className=\"header-search\">\r\n                <div className=\"loggo-header\">\r\n                    \r\n                    <img onClick={() => history.push('/')} className=\"logotype\"\r\n                        src={Logotype} alt=\"Error...\" />\r\n                    {/* <h1 onClick={() => history.push('/')}>Crypto Shuttle</h1> */}\r\n                    {/* <span onClick={() => history.push('/userregister')} className=\"register\" >Register</span> */}\r\n                </div>\r\n                <Search />\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport CryptoShuttleService from '../../utils/api/services/CryptoShuttleService';\r\nimport './TrendingInfo.css'\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPepperHot } from '@fortawesome/free-solid-svg-icons'\r\n\r\nexport const TrendingInfo = () => {\r\n    const [error, setError] = useState(null);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [trendingInfo, setTrendingInfo] = useState([]);\r\n\r\n    const fetchData = async () => {\r\n        try {\r\n            const { data } = await CryptoShuttleService.trendingInfo()\r\n            setIsLoaded(true);\r\n            setTrendingInfo(data);\r\n        } catch (error) {\r\n            setIsLoaded(true);\r\n            setError(error);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchData()\r\n    }, [])\r\n\r\n    if (error) {\r\n        return <div>Error: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n        return <div></div>;\r\n    } else {\r\n        return (\r\n            <div className=\"trending-info\">\r\n                <div className=\"header\">\r\n                    <FontAwesomeIcon icon={faPepperHot} size=\"2x\" color=\"red\"/>\r\n                    <h3>Trending</h3>\r\n                </div>\r\n                {Object.keys(trendingInfo).map((key, index) => (\r\n                    <div key={index}>\r\n                        <Link to={`/coins/${key}`} className=\"trending-links\"><h4>{key}</h4></Link>\r\n                        <div>${trendingInfo[key].usd}</div>\r\n                        <div className={(trendingInfo[key].usd_24h_change < 0) ? 'negative' : 'positive'}>\r\n                           <div>{trendingInfo[key].usd_24h_change.toLocaleString()} %</div>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { useEffect, useState } from 'react'\r\nimport CryptoShuttleService from '../../utils/api/services/CryptoShuttleService';\r\nimport './LastViewed.css'\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faClock } from '@fortawesome/free-regular-svg-icons'\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nexport const LastViewed = () => {\r\n    const [error, setError] = useState(null);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [lastViewed, setLastViewed] = useState([]);\r\n    const lastViewedCoins = JSON.parse(localStorage.getItem(\"lastViewedCoins\"));\r\n    const history = useHistory()\r\n    \r\n    const fetchData = async (props) => {\r\n        try {\r\n            const { data } = await CryptoShuttleService.lastViewed(props)\r\n            setIsLoaded(true);\r\n            setLastViewed(data);\r\n        } catch (error) {\r\n            setIsLoaded(true);\r\n            setError(error);\r\n        }\r\n    } \r\n    useEffect(() => {\r\n         \r\n        return history.listen((location) => {\r\n            \r\n            let routeC = location.pathname\r\n            if(location !== routeC) {\r\n                \r\n                let c = JSON.parse(localStorage.getItem('lastViewedCoins'))\r\n                fetchData(c)\r\n            }\r\n        }) \r\n    }, [history]);\r\n                \r\n    const mapOrder = (array, order, key) => {\r\n        array.sort(function (a, b) {\r\n            var A = a[key], B = b[key];\r\n            if (order.indexOf(A) > order.indexOf(B)) {\r\n                return -1;\r\n            } else {\r\n                return 1;\r\n            }\r\n        });\r\n        return array;\r\n    };\r\n    mapOrder(lastViewed, lastViewedCoins, 'id')\r\n\r\n\r\n    if (error) {\r\n        return <div></div>;\r\n    } else if (!isLoaded) {\r\n        return <div></div>;\r\n    } else {\r\n        return (\r\n            <div className=\"last-viewed\">\r\n                <div className=\"header\">\r\n                    <FontAwesomeIcon icon={faClock} size=\"2x\"/> \r\n                    <h3>Last Viewed</h3>\r\n\r\n                </div>\r\n                {Object.keys(lastViewed).map((key, index) => {\r\n                    return (\r\n                        <div key={lastViewed[key].id}>\r\n                            <Link to={`/coins/${lastViewed[key].id}`} className=\"last-viewed-links\"><h4>{lastViewed[key].id}</h4></Link>\r\n                            <div>${lastViewed[key].current_price}</div>\r\n                            <div className={(lastViewed[key].price_change_percentage_24h < 0) ? 'negative' : 'positive'}>\r\n                                <div>{lastViewed[key].price_change_percentage_24h ? lastViewed[key].price_change_percentage_24h.toLocaleString() + ' %' : 'N/A'}</div>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport './Sidebar.css'\r\nimport { TrendingInfo } from '../TrendingInfo/TrendingInfo'\r\nimport { LastViewed } from '../LastViewed/LastViewed'\r\nexport const Sidebar = () => {\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <LastViewed />\r\n            <TrendingInfo />\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { Routing } from './routes/Routing'\r\nimport { UserProvider } from './shared/global/provider/UserProvider'\r\nimport './shared/global/css/Global.css'\r\nimport {NavigationBar} from './components/NavigationBar/NavigationBar'\r\nimport { Sidebar } from './components/Sidebar/Sidebar'\r\nimport { RegUserProvider } from './shared/global/provider/RegUserProvider'\r\nimport { PopupsProvider } from './shared/global/provider/PopupsProvider'\r\n\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <UserProvider>\r\n      <RegUserProvider>\r\n      <PopupsProvider>\r\n      \r\n      <Routing>\r\n\r\n        <NavigationBar/>\r\n        \r\n        <Sidebar />\r\n        \r\n      </Routing>\r\n      </PopupsProvider>\r\n      </RegUserProvider>\r\n\r\n    </UserProvider>\r\n\r\n  );\r\n}\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}